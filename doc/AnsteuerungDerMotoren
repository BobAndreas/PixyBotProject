Ansteuerung der Motoren
Der Entwurf des Motorcontrollers als Eigenständige Einheit war ein wichtiger Teil unseres Entwurfs, weil es es vereinfacht, diesen Teil einzeln zu ändern ohne den restlichen Code zu beeinflussen. Außerdem verringert es die Komplexität des verwendendenden Codes, da er sich nicht mit den Feinheiten der Motoransteuerung befassen muss.

Die Grundlegende Art der Ansteuerung wurde, wie in der Analysephase bereits erwähnt, von der Demonstration des Herstellers des Motorshields übernommen. Der Shield sieht vor, dass jeder Motor durch zwei digitale und einen analogen Ausgang gesteuert wird. Über erwähnterwähntden analogen Ausgang wird ein Wert, der proportional zum Betrag des gewünschten Motorstroms ist, angelegt. Durch die beiden Digitalwerte wird die Drehrichtung des Motors festgelegt. 
In der Bibliothek des Herstellers wurde jedem Motor eine feste Geschwindigkeit zugewiesen und dann gegebenenfalls, in Abhängigkeit von der gewünschten Fahrtrichtung, die Drehrichtung des Motors angepasst. Dieser Ansatz war denkbar ungeeignet für die kleinschrittige Regelung die für die flüssige Verfolgung eines Objektes notwendig wäre. Das primäre Interface der Motorsteurung sollte diesen Einsatzzweck widerspiegeln und so viel die Entscheidung die gewünschte Geschwindigkeit für die Vorwärtsbewegung und die gewünschte Rotation als Parmameter vom Benutzer festlegen zu lassen. Alles weitere würde dann intern im Kontext unseres Motorcontrollers behandelt werden. 
Zu den internen Aufgaben unseres Controllers gehören die Berechnung der Geschwindigkeit die von jedem Motor verlangt wird, die Einhaltung von Maximalwerten für die Geschwindigkeit und die effiziente Ansteuerung der Motoren. Die erste dieser Aufgaben wird in der Klasse Motorcontrol selbst erledigt. Die beiden anderen werden von einer separaten Motor-Klasse erfüllt. Dieser Ansatz minimiert die Duplizierung von Code und simplifiziert die Ansteuerung, da immer nur ein Motor betrachtet werden muss.
Zur Erzeugung des Motorcontrols müssen zwei MotorConfig Objekte übergeben werden. Diese Conifgobjkete beinhalten alle Informationen, die notwendig sind, um einen Motor zu instanzieren. Die Aufgabe den Motor selbst zu instanzieren wird vom Motorcontrol übernommen, da der Benutzer sonst direkten Zugriff auf die einzelnen Motoren hätte. Dies ist nicht gewünscht, da die Abstraktion des Motorcontrols sonst durchlässig wäre und uns dies weniger Freiraum bei der Gestaltung und möglichen Umstrukturierungen des Motorcontrols gegeben hätte. So sind die Motorklassen nur ein Implementierungsdetail, dass zu jedem Zeitpunkt geändert werden kann, da kein Benutzercode davon abhängt. Für jeden Motor werden drei numerische Identifizierer benötigt, die angeben, welche GPIO Pins für welche Rolle im Motor vorgesehen sind.